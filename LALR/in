1 program
    3 { statements }

1 statements
    2 statements statement

5 statement
    2 CHAR init-declarator-list
    2 INT init-declarator-list
	2 expression ;
	5 IF ( expression ) statement
	7 IF ( expression ) statement ELSE statement
	5 WHILE ( expression ) statement
	7 DO statement WHILE ( expression ) ;
	9 FOR ( expression ; expression ; expression ) statement

4 primary-expression
	1 IDENTIFIER
	1 CONSTANT
	1 STRING
	3 ( expression )

4 postfix-expression
	1 primary-expression
	4 postfix-expression [ expression ]
	2 postfix-expression ++
	2 postfix-expression --

4 multiplicative-expression
	1 postfix-expression
	3 multiplicative-expression * postfix-expression
	3 multiplicative-expression / postfix-expression
	3 multiplicative-expression % postfix-expression

3 additive-expression
	1 multiplicative-expression
	3 additive-expression + multiplicative-expression
	3 additive-expression - multiplicative-expression

5 relational-expression
	1 additive-expression
	3 relational-expression < additive-expression
	3 relational-expression > additive-expression
	3 relational-expression <= additive-expression
	3 relational-expression >= additive-expression
    3 relational-expression == additive-expression
    3 relational-expression != additive-expression

2 logical-AND-expression
	1 relational-expression
	3 logical-AND-expression && relational-expression


2 logical-OR-expression
	1 logical-AND-expression
	3 logical-OR-expression || logical-AND-expression

2 assignment-expression
	3 postfix-expression = logical-OR-expression

2 expression
	1 assignment-expression
	3 expression , assignment-expression

2 init-declarator-list
	1 init-declarator
	3 init-declarator-list , init-declarator

2 init-declarator
	1 declarator
	3 declarator = initializer

2 declarator
	1 identifier
	4 declarator [ assignment-expression ]

2 initializer
	1 assignment-expression
	3 { initializer-list }

2 initializer-list
	1 assignment-expression
	3 initializer-list , assignment-expression

